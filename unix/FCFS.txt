#include <stdio.h>

int main() {
    int n, i;
    int burst_time[100], waiting_time[100], turnaround_time[100];
    int process[100];

    // Input number of processes
    printf("Enter the number of processes: ");
    scanf("%d", &n);

    // Input burst times
    for(i = 0; i < n; i++) {
        process[i] = i + 1;
        printf("Enter burst time for Process %d: ", i + 1);
        scanf("%d", &burst_time[i]);
    }

    // Calculate waiting times
    waiting_time[0] = 0;  // First process always has 0 waiting time
    for(i = 1; i < n; i++) {
        waiting_time[i] = waiting_time[i - 1] + burst_time[i - 1];
    }

    // Calculate turnaround times
    for(i = 0; i < n; i++) {
        turnaround_time[i] = waiting_time[i] + burst_time[i];
    }

    // Display the table
    printf("\n------------------------------------------------------------\n");
    printf("Process\t\tBurst Time\tWaiting Time\tTurnaround Time\n");
    printf("------------------------------------------------------------\n");
    for(i = 0; i < n; i++) {
        printf("P%d\t\t%d\t\t%d\t\t%d\n", process[i], burst_time[i], waiting_time[i], turnaround_time[i]);
    }

    // Calculate average waiting and turnaround times
    float total_waiting = 0, total_turnaround = 0;
    for(i = 0; i < n; i++) {
        total_waiting += waiting_time[i];
        total_turnaround += turnaround_time[i];
    }

    printf("------------------------------------------------------------\n");
    printf("Average Waiting Time: %.2f\n", total_waiting / n);
    printf("Average Turnaround Time: %.2f\n", total_turnaround / n);

    return 0;
}
